name: youtube

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'Enter YouTube video URL'
        required: true
        default: 'https://youtu.be/sample_video'
      media_choice:
        description: '选择媒体类型 (视频、音频或视频+音频)'
        required: true
        type: choice
        options:
          - '720p'
          - '1080p'
          - '1440p'
          - '4K'
          - '8K'
          - '720p + Audio'
          - '1080p + Audio'
          - '4K + Audio'
          - '8K + Audio'
          - 'Audio Only'
        default: '1080p + Audio'
      enable_sections:
        description: 'Enable video section trimming?'
        required: false
        type: choice
        options: 
          - 'false'
          - 'true'
        default: 'false'
      start_time:
        description: 'Start time (if section trimming is enabled)'
        required: false
        default: '0:00'
      end_time:
        description: 'End time (if section trimming is enabled)'
        required: false
        default: '2:00'
      view_screenshot:
        description: |
          是否要查看视频截图？
          如果选择"Yes"，截图将保存到仓库根目录，文件名为"screenshot.png"。
        required: false
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'No'

jobs:
  get_screenshot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install yt-dlp and ffmpeg
        run: |
          pip install yt-dlp
          sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: 获取视频和音频流编号
        run: |
          # 写入 cookie 内容到临时 cookies.txt 文件
          echo '# Netscape HTTP Cookie File' > cookies.txt
          echo '# This file is generated by yt-dlp.  Do not edit.' >> cookies.txt
          echo '.youtube.com	TRUE	/	FALSE	1790407599	APISID	DgYvOOQKlw7h1_8Q/AAGRKC7MKiD__hmR5' >> cookies.txt
          echo '.youtube.com	TRUE	/	FALSE	1790407599	HSID	A29n9-aq9ok17ohwv' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1758578796	LOGIN_INFO	AFmmF2swRQIhAP6azagS6hbbqZvl9x5hZo9KFdcZ1Om81JriVkoOLPLfAiAigy9mG7_0gGrPLtLV6mADHFIhDzCLizTip_9sz72Feg:QUQ3MjNmeXFXdWVkN1ZuQ1VBT1NUOVJmWGRIZ1RxUGRHd0VhOUpGSWFOdmRCVVlsdUdmd1ZockVZc2ZvcTVkTlZSdVFLZnhqWEZTdmVqSXEtRjdncVRFUVJrMEFGYUU2NjUxZ0VGTG9IUDI1aGV4QWNuT21fY3pzaEhsbTNIS1dlOF9md01Fc3J5VlhibjZiRDBscV8xMGJFWGFRWmloQ1Zn' >> cookies.txt
          echo '.youtube.com	TRUE	/	FALSE	0	PREF	tz=UTC&f4=4000000&f5=30000&hl=en' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	SAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO' >> cookies.txt
          echo '.youtube.com	TRUE	/	FALSE	1790407599	SID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQjhwDBaDshxFo_UoJY_CuxAACgYKAVgSARcSFQHGX2MiTgzyxijZzYHHHXGzt4woLBoVAUF8yKotoPqxqWVExT24ebMSvj0c0076' >> cookies.txt
          echo '.youtube.com	TRUE	/	FALSE	1759077698	SIDCC	AKEyXzU0Er8ftiIgAnxIA5ekFt0qOQZeuOgtBzIwSWl2FqTWxOhgTeA6ZfFC2l8zeXt347_owOA' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	SSID	AElyTLfeX7flrXXc3' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1739570722	VISITOR_INFO1_LIVE	bX3M9ZU2b1k' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1739570722	VISITOR_PRIVACY_METADATA	CgJVUxIEGgAgFA%3D%3D' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	0	YSC	9FMpuBmL0Ss' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQriZ4BdZ94dve67WUAXhiZwACgYKASwSARcSFQHGX2MiUppqFWl3DqM3T_-rmf3YdxoVAUF8yKoWGI_WQXB9c1gHd_kx4spr0076' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1759077698	__Secure-1PSIDCC	AKEyXzWa3Nxw_161vkcdFQ2smlO1EiL7kunsUxWGLCklCUhfoRBX0lERmX_cZlOJRQIKNITnQ8s' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1755555440	__Secure-1PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQXxqIhrsWCSrJOJRx6ZfrkQACgYKAdoSARcSFQHGX2Mi4GbPZaghrjP_9YBSS0T-DhoVAUF8yKrUAWbUbViaK647iBumpSJ-0076' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1759077698	__Secure-3PSIDCC	AKEyXzU9_p6NvNTzKzQBPtDoYB71s0iTwjo62ESiZr8B52d4Nqruic_vw_E2R_aqKOLjEK1ArRM' >> cookies.txt
          echo '.youtube.com	TRUE	/	TRUE	1755555440	__Secure-3PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA' >> cookies.txt

          # 使用 cookies 文件获取格式信息
          yt-dlp --cookies cookies.txt -F ${{ github.event.inputs.video_url }} > formats.txt

          # 解析用户选择的媒体类型
          MEDIA_CHOICE="${{ github.event.inputs.media_choice }}"

          if [[ "$MEDIA_CHOICE" == *"+ Audio"* ]]; then
            RES=$(echo "$MEDIA_CHOICE" | sed 's/ + Audio//')
            VIDEO_STREAM_ID=$(grep -E "${RES}" formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            AUDIO_STREAM_ID=$(grep 'audio only' formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "VIDEO_STREAM_ID=$VIDEO_STREAM_ID" >> $GITHUB_ENV
            echo "AUDIO_STREAM_ID=$AUDIO_STREAM_ID" >> $GITHUB_ENV

          elif [[ "$MEDIA_CHOICE" == "Audio Only" ]]; then
            AUDIO_STREAM_ID=$(grep 'audio only' formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "AUDIO_STREAM_ID=$AUDIO_STREAM_ID" >> $GITHUB_ENV

          else
            RES=$MEDIA_CHOICE
            VIDEO_STREAM_ID=$(grep -E "${RES}" formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "VIDEO_STREAM_ID=$VIDEO_STREAM_ID" >> $GITHUB_ENV
          fi
      
      - name: 下载视频和音频
        run: |
          if [[ "$MEDIA_CHOICE" == *"+ Audio"* ]]; then
            # 下载视频 + 音频并进行合并
            yt-dlp --cookies cookies.txt -f "${VIDEO_STREAM_ID}+${AUDIO_STREAM_ID}" --concurrent-fragments 10 \
            $([[ "${{ github.event.inputs.enable_sections }}" == "true" ]] && echo "--download-sections *${{ github.event.inputs.start_time }}-${{ github.event.inputs.end_time }}") \
            -o "downloads/%(id)s.%(ext)s" ${{ github.event.inputs.video_url }}
          elif [[ "$MEDIA_CHOICE" == "Audio Only" ]]; then
            # 下载音频
            yt-dlp --cookies cookies.txt -f $AUDIO_STREAM_ID --concurrent-fragments 10 \
            $([[ "${{ github.event.inputs.enable_sections }}" == "true" ]] && echo "--download-sections *${{ github.event.inputs.start_time }}-${{ github.event.inputs.end_time }}") \
            -o "downloads/%(id)s.%(ext)s" ${{ github.event.inputs.video_url }}
          else
            # 只下载视频
            yt-dlp --cookies cookies.txt -f $VIDEO_STREAM_ID --concurrent-fragments 10 \
            $([[ "${{ github.event.inputs.enable_sections }}" == "true" ]] && echo "--download-sections *${{ github.event.inputs.start_time }}-${{ github.event.inputs.end_time }}") \
            -o "downloads/%(id)s.%(ext)s" ${{ github.event.inputs.video_url }}
          fi
            echo "Video Stream ID: $VIDEO_STREAM_ID"
            echo "Audio Stream ID: $AUDIO_STREAM_ID"
      
      - name: 获取下载文件的路径
        run: |
          rm cookies.txt
          FILE_PATH=$(ls downloads/*)
          echo "下载的文件路径: $FILE_PATH"
          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
      
      - name: Upload screenshot as artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-videos
          path: downloads/**
      
      - name: Capture screenshot at 5 seconds
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_choice != '只有音频' }}
        run: ffmpeg -i ${{ env.FILE_PATH }} -ss 5 -vframes 1 -y screenshot.png

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit and push screenshot to repository
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_choice != '只有音频' }}
        run: |
          git add screenshot.png 
          git commit -a -m "Add screenshot from YouTube video"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
