name: youtube

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: '输入YouTube视频链接'
        required: true
        default: 'https://youtu.be/sample_video'
      enable_matrix:
        description: '是否启用矩阵作业'
        required: true
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'No'
      media_choices:
        description: '启用矩阵作业时选择多个媒体类型 (用逗号分隔，例如: 720p, 1080p + Audio, 1440p)'
        required: false
        default: ''
      media_choice:
        description: '传统模式下选择一个媒体类型'
        required: false
        type: choice
        options:
          - '720p'
          - '1080p'
          - '1440p'
          - '4K'
          - '8K'
          - '720p + Audio'
          - '1080p + Audio'
          - '1440p + Audio'
          - '4K + Audio'
          - '8K + Audio'
          - 'Audio Only'
        default: '1080p + Audio'

jobs:
  get_media:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        media_choice: ${{ fromJson(inputs.media_choices) }}  # 仅当启用矩阵时使用矩阵

    steps:
      - uses: actions/checkout@v4

      - name: Install yt-dlp and ffmpeg
        run: |
          pip install yt-dlp
          sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: 获取视频和音频流编号
        run: |
          # 根据用户选择启用矩阵或传统模式
          if [[ "${{ github.event.inputs.enable_matrix }}" == "Yes" ]]; then
            MEDIA_CHOICE="${{ matrix.media_choice }}"
          else
            MEDIA_CHOICE="${{ github.event.inputs.media_choice }}"
          fi

          yt-dlp --cookies cookies.txt -F ${{ github.event.inputs.video_url }} > formats.txt
          if [[ "$MEDIA_CHOICE" == *"+ Audio"* ]]; then
            RES=$(echo "$MEDIA_CHOICE" | sed 's/ + Audio//')
            VIDEO_STREAM_ID=$(grep -E "${RES}" formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            AUDIO_STREAM_ID=$(grep 'audio only' formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "VIDEO_STREAM_ID=$VIDEO_STREAM_ID" >> $GITHUB_ENV
            echo "AUDIO_STREAM_ID=$AUDIO_STREAM_ID" >> $GITHUB_ENV
          elif [[ "$MEDIA_CHOICE" == "Audio Only" ]]; then
            AUDIO_ONLY_STREAM_ID=$(grep 'audio only' formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "AUDIO_ONLY_STREAM_ID=$AUDIO_ONLY_STREAM_ID" >> $GITHUB_ENV
          else
            VIDEO_ONLY_STREAM_ID=$(grep -E "${MEDIA_CHOICE}" formats.txt | grep https | sort -k6 -nr | head -n 1 | awk '{print $1}')
            echo "VIDEO_ONLY_STREAM_ID=$VIDEO_ONLY_STREAM_ID" >> $GITHUB_ENV
          fi
      
      - name: 下载视频和音频
        run: |
          yt-dlp --cookies cookies.txt \
          -f "$([[ -n "$VIDEO_STREAM_ID" && -n "$AUDIO_STREAM_ID" ]] && echo "$VIDEO_STREAM_ID+$AUDIO_STREAM_ID" || ([[ -n "$AUDIO_ONLY_STREAM_ID" ]] && echo "$AUDIO_ONLY_STREAM_ID" || echo "$VIDEO_ONLY_STREAM_ID"))" \
          --concurrent-fragments 10 -o "downloads/%(id)s.%(ext)s" ${{ github.event.inputs.video_url }}

      - name: 获取下载文件的路径
        run: |
          FILE_PATH=$(ls downloads/*)
          echo "下载的文件路径: $FILE_PATH"
          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
