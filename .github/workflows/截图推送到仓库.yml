name: Get Video Screenshot

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: '🔗 输入YouTube视频链接'
        required: true
        default: 'https://youtu.be/sample_video'
      enable_sections:
        description: |
          ✂️ 想下载YouTube视频的片段吗？选“是”就能设置开始和结束时间。你可以用小时:分钟:秒.毫秒（比如：01:23:45.678），分钟:秒.毫秒，秒.毫秒，甚至直接写秒（比如：12345）来表示时间。开始时间写0就是从头开始。结束时间不能超过或等于视频总长度。 如果以视频总长度作为结束时间，最好稍微提前一点（比如少0.5秒），以避免下载出错。 yt-dlp会尽量精确分割，但由于视频格式等原因，实际下载的片段可能与设置的时间略有差异。想下载YouTube上一个5分钟的搞笑视频的前30秒，可以设置开始时间为0，结束时间为0:30。如果想下载后30秒，可以设置开始时间为4:30，结束时间为4:59.5。这样，你就可以轻松地下载自己喜欢的YouTube视频片段了。
        required: false
        type: choice
        options: 
          - 'No'
          - 'Yes'
        default: 'No'
      start_time:
        description: '✂️ 开始时间'
        required: false
        default: '0:00'
      end_time:
        description: '✂️ 结束时间'
        required: false
        default: '2:00'
      upload_artifact:
        description: '📤 是否要将下载的视频上传为Artifact？'
        required: false
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'Yes'
      view_screenshot:
        description: |
          🖼️ 是否要查看视频截图？
          如果选择"Yes"，截图将保存到仓库根目录，文件名为"screenshot.png"。
        required: false
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'No'
      media_quality:
        description: '▶️ 选择媒体质量选项（注意：选择包含视频和音频的选项会将流合并为带有声音的完整视频。仅视频表示没有音频，仅音频表示没有图像。所有媒体都将以最佳可用质量下载）。'
        required: false
        type: choice
        options:
          - '8K Video + Audio'
          - '8K Video Only'
          - '4K Video + Audio (default)'
          - '4K Video Only'
          - '1440p Video + Audio'
          - '1440p Video Only'
          - '1080p Video + Audio'
          - '1080p Video Only'
          - '720p Video + Audio'
          - '720p Video Only'
          - 'Audio Only'
        default: '4K Video + Audio (default)'

jobs:
  get_screenshot:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install yt-dlp and ffmpeg
        run: |
          pip install yt-dlp
          sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Download selected media type
        run: |
          COOKIES=$(cat <<EOF
          # Netscape HTTP Cookie File
          # This file is generated by yt-dlp.  Do not edit.
          
          .youtube.com	TRUE	/	FALSE	1790407599	APISID	DgYvOOQKlw7h1_8Q/AAGRKC7MKiD__hmR5
          .youtube.com	TRUE	/	FALSE	1790407599	HSID	A29n9-aq9ok17ohwv
          .youtube.com	TRUE	/	TRUE	1758578796	LOGIN_INFO	AFmmF2swRQIhAP6azagS6hbbqZvl9x5hZo9KFdcZ1Om81JriVkoOLPLfAiAigy9mG7_0gGrPLtLV6mADHFIhDzCLizTip_9sz72Feg:QUQ3MjNmeXFXdWVkN1ZuQ1VBT1NUOVJmWGRIZ1RxUGRHd0VhOUpGSWFOdmRCVVlsdUdmd1ZockVZc2ZvcTVkTlZSdVFLZnhqWEZTdmVqSXEtRjdncVRFUVJrMEFGYUU2NjUxZ0VGTG9IUDI1aGV4QWNuT21fY3pzaEhsbTNIS1dlOF9md01Fc3J5VlhibjZiRDBscV8xMGJFWGFRWmloQ1Zn
          .youtube.com	TRUE	/	FALSE	0	PREF	tz=UTC&f4=4000000&f5=30000&hl=en
          .youtube.com	TRUE	/	TRUE	1790407599	SAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	FALSE	1790407599	SID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQjhwDBaDshxFo_UoJY_CuxAACgYKAVgSARcSFQHGX2MiTgzyxijZzYHHHXGzt4woLBoVAUF8yKotoPqxqWVExT24ebMSvj0c0076
          .youtube.com	TRUE	/	FALSE	1758901557	SIDCC	AKEyXzVglPMunvSehjmJ8DfqAvRKz-uAPzteXch06Qhf8xeA05ZXkET5YP7JDZ7lDqGoWibpj9Y
          .youtube.com	TRUE	/	TRUE	1790407599	SSID	AElyTLfeX7flrXXc3
          .youtube.com	TRUE	/	TRUE	1739570722	VISITOR_INFO1_LIVE	bX3M9ZU2b1k
          .youtube.com	TRUE	/	TRUE	1739570722	VISITOR_PRIVACY_METADATA	CgJVUxIEGgAgFA%3D%3D
          .youtube.com	TRUE	/	TRUE	0	YSC	9FMpuBmL0Ss
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQriZ4BdZ94dve67WUAXhiZwACgYKASwSARcSFQHGX2MiUppqFWl3DqM3T_-rmf3YdxoVAUF8yKoWGI_WQXB9c1gHd_kx4spr0076
          .youtube.com	TRUE	/	TRUE	1758901557	__Secure-1PSIDCC	AKEyXzUp0acgDO7ZsH0xu8rk0id_ah84kIjuK_KyFuaZ86Sm8Q1f5pUheYNrADOy9wbagQj6syg
          .youtube.com	TRUE	/	TRUE	1755555440	__Secure-1PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQXxqIhrsWCSrJOJRx6ZfrkQACgYKAdoSARcSFQHGX2Mi4GbPZaghrjP_9YBSS0T-DhoVAUF8yKrUAWbUbViaK647iBumpSJ-0076
          .youtube.com	TRUE	/	TRUE	1758901557	__Secure-3PSIDCC	AKEyXzV_OzpFFbxEvWBf_tKh5-A6W835qIhT5LATGsdMavAwb7oKNN3sYa08v0U74T6MzrwfVJs
          .youtube.com	TRUE	/	TRUE	1755555440	__Secure-3PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA
          EOF
          )

          echo "$COOKIES" > cookies.txt
          yt-dlp --cookies cookies.txt -F ${{ github.event.inputs.video_url }}
          echo -e "\033[33m---------------------------------------------------------------------------------------\033[0m"
          yt-dlp --cookies cookies.txt --concurrent-fragments 10 \
          $([[ "${{ github.event.inputs.media_quality }}" == "8K Video + Audio" ]] && echo "-f bestvideo+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "8K Video Only" ]] && echo "-f bestvideo") \
          $([[ "${{ github.event.inputs.media_quality }}" == "4K Video + Audio (default)" ]] && echo "-f bestvideo[ext=webm]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "4K Video Only" ]] && echo "-f bestvideo[ext=webm]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1440p Video Only" ]] && echo "-f bestvideo[height<=1440]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1440p Video + Audio" ]] && echo "-f bestvideo[height<=1440]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1080p Video Only" ]] && echo "-f bestvideo[height<=1080]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1080p Video + Audio" ]] && echo "-f bestvideo[height<=1080]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "720p Video Only" ]] && echo "-f bestvideo[height<=720]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "720p Video + Audio" ]] && echo "-f bestvideo[height<=720]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "Audio Only" ]] && echo "-f bestaudio") \
          $([[ "${{ github.event.inputs.enable_sections }}" == "Yes" ]] && echo "--download-sections *${{ github.event.inputs.start_time }}-${{ github.event.inputs.end_time }}") \
          -o "media_output.webm" \
          ${{ github.event.inputs.video_url }} 

      - name: Upload video as artifact
        if: ${{ github.event.inputs.upload_artifact == 'Yes' }}
        uses: actions/upload-artifact@v4
        with:
          name: media
          path: media_output.webm
      
      - name: Capture screenshot at 5 seconds
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Audio Only' }}
        run: ffmpeg -i media_output.webm -ss 5 -vframes 1 -y screenshot.png

      - name: Configure Git
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Audio Only' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Commit and push screenshot to repository
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Audio Only' }}
        run: |
          git add screenshot.png cookies.txt
          git commit -m "Add screenshot from YouTube video"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
