name: Get Video Screenshot

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'Enter YouTube video URL'
        required: true
        default: 'https://youtu.be/sample_video'
      enable_sections:
        description: |
          'Enable video section trimming? (Time format examples: 
          For videos longer than 1 hour: 00:00:00 or 00:00:00.0 for milliseconds.
          For videos less than 1 hour: 0:00 or 00:00, and with milliseconds: 
          0:00.0 or 00:00.0. You can also use seconds, e.g., 25 or 125.5. 
          Start and end times can use different formats, e.g., start time: 2:03, 
          end time: 140.)'
        required: true
        type: choice
        options: 
          - 'false'
          - 'true'
        default: 'false'
      start_time:
        description: |
          'Start time (if section trimming is enabled).
          **Note**: ffmpeg's ability to accurately trim depends on the position of keyframes.
          The actual start of the clip might differ from the time you enter if it's not near 
          a keyframe. The closer the start time is to a keyframe, the more accurate the trim.
          If you enter "0", the trimming will start from the first frame and be fully accurate.'
        required: false
        default: '0:00'
      end_time:
        description: |
          'End time (if section trimming is enabled).
          **Note**: End time cannot exceed or equal the original video length.
          If you need to use the original video length, set the end time to 
          0.5 seconds shorter than the actual video length. For example, if the original video 
          length is 3 minutes, set the end time to 2:59.5. This accounts for slight differences 
          in length detected by ffmpeg compared to the online player, preventing download errors.'
        required: false
        default: '2:00'
      upload_artifact:
        description: 'Do you want to upload the downloaded video as an artifact?'
        required: true
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'Yes'
      view_screenshot:
        description: |
          'Do you want to see the video screenshot? 
          If "Yes", screenshot saved to repository root as "screenshot.png".'
        required: true
        type: choice
        options:
          - 'Yes'
          - 'No'
        default: 'No'
      media_quality:
        description: 'Select media quality to download'
        required: true
        type: choice
        options:
          - 'Suitable for 8K Video + Best Audio'
          - 'Suitable for 8K Video Only'
          - 'Suitable for 4K Video + Best Audio'
          - 'Suitable for 4K Video Only'
          - '1080p Video Only'
          - '1080p Video + Best Audio'
          - 'Highest Quality Audio Only'
        default: 'Suitable for 4K Video + Best Audio'

jobs:
  get_screenshot:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install yt-dlp and ffmpeg
        run: |
          pip install yt-dlp
          sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Download selected media type
        run: |
          COOKIES=$(cat <<EOF
          # Netscape HTTP Cookie File
          # This file is generated by yt-dlp.  Do not edit.
          
          .youtube.com	TRUE	/	FALSE	1790407599	APISID	DgYvOOQKlw7h1_8Q/AAGRKC7MKiD__hmR5
          .youtube.com	TRUE	/	FALSE	1790407599	HSID	A29n9-aq9ok17ohwv
          .youtube.com	TRUE	/	TRUE	1758578796	LOGIN_INFO	AFmmF2swRQIhAP6azagS6hbbqZvl9x5hZo9KFdcZ1Om81JriVkoOLPLfAiAigy9mG7_0gGrPLtLV6mADHFIhDzCLizTip_9sz72Feg:QUQ3MjNmeXFXdWVkN1ZuQ1VBT1NUOVJmWGRIZ1RxUGRHd0VhOUpGSWFOdmRCVVlsdUdmd1ZockVZc2ZvcTVkTlZSdVFLZnhqWEZTdmVqSXEtRjdncVRFUVJrMEFGYUU2NjUxZ0VGTG9IUDI1aGV4QWNuT21fY3pzaEhsbTNIS1dlOF9md01Fc3J5VlhibjZiRDBscV8xMGJFWGFRWmloQ1Zn
          .youtube.com	TRUE	/	FALSE	0	PREF	tz=UTC&f4=4000000&f5=30000&hl=en
          .youtube.com	TRUE	/	TRUE	1790407599	SAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	FALSE	1790407599	SID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQjhwDBaDshxFo_UoJY_CuxAACgYKAVgSARcSFQHGX2MiTgzyxijZzYHHHXGzt4woLBoVAUF8yKotoPqxqWVExT24ebMSvj0c0076
          .youtube.com	TRUE	/	FALSE	1758901557	SIDCC	AKEyXzVglPMunvSehjmJ8DfqAvRKz-uAPzteXch06Qhf8xeA05ZXkET5YP7JDZ7lDqGoWibpj9Y
          .youtube.com	TRUE	/	TRUE	1790407599	SSID	AElyTLfeX7flrXXc3
          .youtube.com	TRUE	/	TRUE	1739570722	VISITOR_INFO1_LIVE	bX3M9ZU2b1k
          .youtube.com	TRUE	/	TRUE	1739570722	VISITOR_PRIVACY_METADATA	CgJVUxIEGgAgFA%3D%3D
          .youtube.com	TRUE	/	TRUE	0	YSC	9FMpuBmL0Ss
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-1PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQriZ4BdZ94dve67WUAXhiZwACgYKASwSARcSFQHGX2MiUppqFWl3DqM3T_-rmf3YdxoVAUF8yKoWGI_WQXB9c1gHd_kx4spr0076
          .youtube.com	TRUE	/	TRUE	1758901557	__Secure-1PSIDCC	AKEyXzUp0acgDO7ZsH0xu8rk0id_ah84kIjuK_KyFuaZ86Sm8Q1f5pUheYNrADOy9wbagQj6syg
          .youtube.com	TRUE	/	TRUE	1755555440	__Secure-1PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PAPISID	JNf6kWbVNoLW2zuP/A0sSKsxaZTogaF-TO
          .youtube.com	TRUE	/	TRUE	1790407599	__Secure-3PSID	g.a000oQiM80_qGHnbZB9T4Wy03ZXWW1wEZEHoFBjj8sgOcARcJtVQXxqIhrsWCSrJOJRx6ZfrkQACgYKAdoSARcSFQHGX2Mi4GbPZaghrjP_9YBSS0T-DhoVAUF8yKrUAWbUbViaK647iBumpSJ-0076
          .youtube.com	TRUE	/	TRUE	1758901557	__Secure-3PSIDCC	AKEyXzV_OzpFFbxEvWBf_tKh5-A6W835qIhT5LATGsdMavAwb7oKNN3sYa08v0U74T6MzrwfVJs
          .youtube.com	TRUE	/	TRUE	1755555440	__Secure-3PSIDTS	sidts-CjABUFGohyYDRsIY1drC57B6ZRGHEfZBMEkOkgbLhcUgQMkEExnqHUsMQaGvT2cYtXAQAA
          EOF
          )

          echo "$COOKIES" > cookies.txt
          yt-dlp --cookies cookies.txt -F \
          $([[ "${{ github.event.inputs.media_quality }}" == "Suitable for 8K Video + Best Audio" ]] && echo "-f bestvideo+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "Suitable for 8K Video Only" ]] && echo "-f bestvideo") \
          $([[ "${{ github.event.inputs.media_quality }}" == "Suitable for 4K Video + Best Audio" ]] && echo "-f bestvideo[ext=webm]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "Suitable for 4K Video Only" ]] && echo "-f bestvideo[ext=webm]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1080p Video Only" ]] && echo "-f bestvideo[height<=1080]") \
          $([[ "${{ github.event.inputs.media_quality }}" == "1080p Video + Best Audio" ]] && echo "-f bestvideo[height<=1080]+bestaudio") \
          $([[ "${{ github.event.inputs.media_quality }}" == "Highest Quality Audio Only" ]] && echo "-f bestaudio") \
          $([[ "${{ github.event.inputs.enable_sections }}" == "true" ]] && echo "--download-sections *${{ github.event.inputs.start_time }}-${{ github.event.inputs.end_time }}") \
          -o "media_output.webm" \
          ${{ github.event.inputs.video_url }}

      - name: Upload video as artifact
        if: ${{ github.event.inputs.upload_artifact == 'Yes' }}
        uses: actions/upload-artifact@v4
        with:
          name: media
          path: media_output.webm
      
      - name: Capture screenshot at 30 seconds
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Highest Quality Audio Only' }}
        run: ffmpeg -i media_output.webm -ss 11 -vframes 1 -y screenshot.png

      - name: Configure Git
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Highest Quality Audio Only' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Commit and push screenshot to repository
        if: ${{ github.event.inputs.view_screenshot == 'Yes' && github.event.inputs.media_quality != 'Highest Quality Audio Only' }}
        run: |
          git add screenshot.png 
          git commit -a -m "Add screenshot from YouTube video"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
