name: Build FFmpeg for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TERMUX_ARCH: arm
      TERMUX_HOST_PLATFORM: arm-linux-androideabi
      TERMUX_PREFIX: /data/data/com.termux/files/usr
      TERMUX_PKG_BUILDDIR: ${{ github.workspace }}/build
      TERMUX_PKG_SRCDIR: ${{ github.workspace }}/src
      TERMUX_PKG_MASSAGEDIR: ${{ github.workspace }}/massage
      AS: ${{ github.workspace }}/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang
      CC: ${{ github.workspace }}/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang
      CXX: ${{ github.workspace }}/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang++
      NM: ${{ github.workspace }}/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-nm
      PKG_CONFIG: pkg-config
      STRIP: ${{ github.workspace }}/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
        unzip android-ndk-r26b-linux.zip
        export ANDROID_NDK_HOME=${{ github.workspace }}/android-ndk-r26b

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          autoconf \
          automake \
          build-essential \
          cmake \
          git \
          libtool \
          pkg-config \
          texinfo \
          wget \
          yasm \
          zlib1g-dev

    - name: Apply NDK patches
      run: |
        cd ${{ github.workspace }}/termux-packages/ndk-patches/26b
        for patch in *.patch; do
          patch -p1 < $patch
        done

    - name: Download FFmpeg source
      run: |
        mkdir -p $TERMUX_PKG_SRCDIR
        wget https://www.ffmpeg.org/releases/ffmpeg-6.1.1.tar.xz -O $TERMUX_PKG_SRCDIR/ffmpeg-6.1.1.tar.xz
        tar -xf $TERMUX_PKG_SRCDIR/ffmpeg-6.1.1.tar.xz -C $TERMUX_PKG_SRCDIR
        mv $TERMUX_PKG_SRCDIR/ffmpeg-6.1.1/* $TERMUX_PKG_SRCDIR

    - name: Apply FFmpeg patches
      run: |
        cd $TERMUX_PKG_SRCDIR
        patch -p1 < ${{ github.workspace }}/termux-packages/packages/ffmpeg/configure.patch
        patch -p1 < ${{ github.workspace }}/termux-packages/packages/ffmpeg/libavcodec-allcodecs.c.patch
        patch -p1 < ${{ github.workspace }}/termux-packages/packages/ffmpeg/libavutil-file_open.c.patch

    - name: Configure FFmpeg
      run: |
        mkdir -p $TERMUX_PKG_BUILDDIR
        cd $TERMUX_PKG_BUILDDIR
        $TERMUX_PKG_SRCDIR/configure \
          --arch="armeabi-v7a" \
          --as="$AS" \
          --cc="$CC" \
          --cxx="$CXX" \
          --nm="$NM" \
          --pkg-config="$PKG_CONFIG" \
          --strip="$STRIP" \
          --cross-prefix="${TERMUX_HOST_PLATFORM}-" \
          --disable-indevs \
          --disable-outdevs \
          --enable-indev=lavfi \
          --disable-static \
          --disable-symver \
          --enable-cross-compile \
          --enable-gnutls \
          --enable-gpl \
          --enable-version3 \
          --enable-jni \
          --enable-lcms2 \
          --enable-libaom \
          --enable-libass \
          --enable-libbluray \
          --enable-libdav1d \
          --enable-libfontconfig \
          --enable-libfreetype \
          --enable-libfribidi \
          --enable-libgme \
          --enable-libharfbuzz \
          --enable-libmp3lame \
          --enable-libopencore-amrnb \
          --enable-libopencore-amrwb \
          --enable-libopenmpt \
          --enable-libopus \
          --enable-librav1e \
          --enable-libsoxr \
          --enable-libsrt \
          --enable-libssh \
          --enable-libsvtav1 \
          --enable-libtheora \
          --enable-libv4l2 \
          --enable-libvidstab \
          --enable-libvo-amrwbenc \
          --enable-libvorbis \
          --enable-libvpx \
          --enable-libwebp \
          --enable-libx264 \
          --enable-libx265 \
          --enable-libxml2 \
          --enable-libxvid \
          --enable-libzimg \
          --enable-mediacodec \
          --enable-opencl \
          --enable-shared \
          --prefix="$TERMUX_PREFIX" \
          --target-os=android \
          --extra-libs="-landroid-glob" \
          --disable-vulkan \
          --enable-neon \
          --disable-libfdk-aac

    - name: Build FFmpeg
      run: |
        cd $TERMUX_PKG_BUILDDIR
        make -j$(nproc)

    - name: Post build steps
      run: |
        mkdir -p ${TERMUX_PKG_MASSAGEDIR}/${TERMUX_PREFIX}/lib
        cd ${TERMUX_PKG_MASSAGEDIR}/${TERMUX_PREFIX}/lib
        for f in util codec format; do
          local s=$(eval echo \$_FFMPEG_SOVER_av${f})
          if [ ! "${s}" ]; then
            echo "Empty SOVERSION for libav${f}."
            exit 1
          fi
          if [ ! -e "./libav${f}.so.${s}" ]; then
            ln -sf libav${f}.so libav${f}.so.${s}
          fi
        done
