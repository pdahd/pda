name: Download YouTube Video

on: [push]

jobs:
  download_video:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yt-dlp
        run: pip install yt-dlp

      - name: List all available streams
        if: false
        env:
          COOKIES_CONTENT: ${{ secrets.COOKIES }}
        run: |
          yt-dlp --cookies <(echo "$COOKIES_CONTENT") -F \
          https://youtu.be/n2aYLM2Fg5w?si=bnlVZ7vJEfAPawEg

      - name: Setup FFmpeg
        run: |
          chmod +x ffmpeg
          echo "$GITHUB_WORKSPACE" >> $GITHUB_PATH

      - name: Download videos and audio
        env:
          COOKIES_CONTENT: ${{ secrets.COOKIES }}
          INCLUDE_SECTIONS: "false"
          ENABLE_MULTITHREAD: "true"
        run: |
          # 定义一个数组，每个元素包括流编号、链接和输出文件名
          videos=(
            "313 https://youtu.be/jkOR6QLqT5g?si=dPF93NyqnkNe8AWl VAL.webm"
            "313 https://youtu.be/GKyWywyglag?si=mwu1QlOzh00Y59UJ bw2046.webm"
            "137 https://youtu.be/n2aYLM2Fg5w?si=bnlVZ7vJEfAPawEg ODS.mp4"
          )

          for video in "${videos[@]}"; do
            # 提取流编号、URL 和输出文件名
            IFS=' ' read -r stream url output_file <<< "$video"

            # 判断流编号是否包含加号
            if [[ "$stream" == *"+"* ]]; then
              # 如果输出文件名没有扩展名，则添加 .mkv
              if [[ "$output_file" != *.* ]]; then
                output_file="${output_file}.mkv"
              else
              # 检查扩展名是否不是 .mkv
              if [[ "$output_file" != *.mkv ]]; then
                output_file="${output_file%.*}.mkv"  # 替换为 .mkv
              fi
            fi
          fi 
            # 打印修改后的文件名
            echo "Modified output file name: $output_file"
            
            yt-dlp --cookies <(echo "$COOKIES_CONTENT") -f "$stream" \
            $([[ "$INCLUDE_SECTIONS" == "true" ]] && echo --download-sections *5-2:36) \
            $([[ "$ENABLE_MULTITHREAD" == "true" ]] && echo --concurrent-fragments 10) \
            -o "$output_file" \
            "$url"
          done
      
      - name: x264编码
        run: |
          ffmpeg -i bw2046.webm \
                 -i VAL.webm \
                 -loop 1 -i uio.png \
                 -ss 42:30 -to 47:30 -i ODS.mp4 \
                 -filter_complex "[0:v]eq=brightness=-0.03[k]; \
                                  [1:v]transpose=2,split=2[v1][v2]; \
                                  [2:v]scale=-2:180[kk]; \
                                  [v2]format=yuva444p,geq=lum='p(X,Y)':a='if(between(X,927,1062)*between(Y,20,208),255,0)',boxblur=10:2[mask]; \
                                  [v1][mask]overlay[kj]; \
                                  [k][kk]overlay=W-w+20:H-h+20[z]; \
                                  [z][kj]concat=n=2:v=1:a=0,split=5[seg1][seg2][seg3][seg4][seg5]; \
                                  [seg1]trim=150.3:189.5,setpts=PTS-STARTPTS[A]; \
                                  [seg2]trim=10.3:32,setpts=PTS-STARTPTS[B]; \
                                  [seg3]trim=128:145.5,setpts=PTS-STARTPTS[C]; \
                                  [seg4]trim=190.2:200.2,setpts=PTS-STARTPTS[D]; \
                                  [seg5]trim=33:110,setpts=PTS-STARTPTS[E]; \
                                  [A][B][C][D][E]concat=n=5:v=1:a=0[gg]; \
                                  [gg][3:v]concat=n=2:v=1:a=0[outv]"
          -map "[outv]" -c:v libx264 -r 29.97003 -preset slower -crf 15 test_video.mp4
      
      - name: Download video and audio-A
        if: false
        env:
          COOKIES_CONTENT: ${{ secrets.COOKIES }}
          INCLUDE_SECTIONS: "false"
          ENABLE_MULTITHREAD: "true"
        run: |
          yt-dlp --cookies <(echo "$COOKIES_CONTENT") -f 137 \
          $([[ "$INCLUDE_SECTIONS" == "true" ]] && echo --download-sections *5-2:36) \
          $([[ "$ENABLE_MULTITHREAD" == "true" ]] && echo --concurrent-fragments 10) \
          -o "AAA.mp4" \
          https://youtu.be/n2aYLM2Fg5w?si=bnlVZ7vJEfAPawEg

      - name: Download video and audio-B
        if: false
        env:
          COOKIES_CONTENT: ${{ secrets.COOKIES }}
          INCLUDE_SECTIONS: "false"
          ENABLE_MULTITHREAD: "true"
        run: |
          yt-dlp --cookies <(echo "$COOKIES_CONTENT") -f 313 \
          $([[ "$INCLUDE_SECTIONS" == "true" ]] && echo --download-sections *5-2:36) \
          $([[ "$ENABLE_MULTITHREAD" == "true" ]] && echo --concurrent-fragments 10) \
          -o "BBB.webm" \
          https://youtu.be/dHfrWznQWgw?si=dG_cP4tLR44OCYBK
      
      - name: Test x264 encoding
        if: false
        run: |
          ffmpeg -i AAA.webm -i BBB.webm \
          -filter_complex "[0:v]scale=-2:1920,eq=brightness=-0.03,split=2[original][copy]; \
          [copy]format=yuva444p,geq=lum='p(X,Y)':a='if(between(X,780,1080)*between(Y,1800,1920),255,0)',boxblur=10:2[mask]; \
          [original][mask]overlay[segA]; \
          [1:v]transpose=1,scale=-2:1920,eq=brightness=-0.05[segB]; \
          [segA][segB]concat=n=2:v=1:a=0,split=6[seg1][seg2][seg3][seg4][seg5][seg6]; \
          [seg1]trim=16.2:31.4,setpts=PTS-STARTPTS[A]; \
          [seg2]trim=33:69,setpts=PTS-STARTPTS[B]; \
          [seg3]trim=99:124,setpts=PTS-STARTPTS[C]; \
          [seg4]trim=177:215,setpts=PTS-STARTPTS[D]; \
          [seg5]trim=71.3:86,setpts=PTS-STARTPTS[E]; \
          [seg6]trim=158:169,setpts=PTS-STARTPTS[F]; \
          [A][C][B][D][E][F]concat=n=6:v=1:a=0[outv]" \
          -map "[outv]" -c:v libx264 -preset slower -crf 15 test_video.mp4

      - name: Test x264 encoding for A
        if: false
        run: |
          ffmpeg -ss 33:30 -to 37:30 -i AAA.mp4 \
          -vf "eq=brightness=-0.01" \
          -c:v libx264 test_video1.mp4
      
      - name: Upload encoded video 
        uses: actions/upload-artifact@v4
        with:
          name: encoded-video
          path: test_video.mp4

      - name: Test x264 encoding for B
        if: false
        run: |
          ffmpeg -ss 37:30 -to 42:30 -i AAA.mp4 \
          -vf "eq=brightness=-0.01" \
          -c:v libx264 test_video2.mp4
      
      - name: Upload encoded video for B
        if: false
        uses: actions/upload-artifact@v4
        with:
          name: encoded-video2
          path: test_video2.mp4

      - name: Upload encoded videos
        if: false
        uses: actions/upload-artifact@v4
        with:
          name: encoded-videos
          path: |
            AAA.mkv
            BBB.mkv
            CCC.mp4
